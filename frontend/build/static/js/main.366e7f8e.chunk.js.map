{"version":3,"sources":["theme.js","Navbar.js","Home.js","MoviesList.js","Movies.js","ActorsList.js","Actors.js","Footer.js","MovieForm.js","ActorForm.js","App.js","index.js"],"names":["theme","extendTheme","fonts","heading","body","config","initialColorMode","useSystemColorMode","Navbar","useColorMode","colorMode","toggleColorMode","useMediaQuery","isSmallScreen","useAuth0","isAuthenticated","loginWithRedirect","logout","navContent","Fragment","as","Button","bgColor","color","_hover","bg","_active","title","href","onClick","returnTo","window","location","origin","spacing","ml","mt","icon","isRound","p","w","size","Home","direction","h","align","fontSize","boxSize","objectFit","src","MoviesList","props","movie","useState","show","setShow","useColorModeValue","maxW","borderWidth","borderRadius","overflow","className","style","backgroundImage","image","backgroundSize","height","d","alignItems","px","colorScheme","rating","fontWeight","letterSpacing","textTransform","genres","release","lineHeight","isTruncated","cast","startingHeight","in","plot","variant","position","Star","imdb","id","Movies","getAccessTokenSilently","movies","setMovies","useEffect","a","audience","scope","token","fetch","headers","Authorization","response","json","console","error","mr","minChildWidth","columnGap","map","ActorsList","actor","dateObj","Date","type","nationality","name","getFullYear","dob","Actors","actors","setActors","Footer","role","mx","py","base","md","justify","Form","setMovie","imageInput","useRef","handleSubmit","useForm","onSubmit","e","current","files","imageName","S3","bucketName","process","region","accessKeyId","secretAccessKey","uploadFile","then","status","log","data","JSON","stringify","method","handleChange","target","value","justifyContent","rounded","maxWidth","boxShadow","isRequired","placeholder","focusBorderColor","onChange","ref","ActorForm","gender","setActor","defaultValue","App","path","ReactDOM","render","StrictMode","domain","clientId","redirectUri","prompt","document","getElementById"],"mappings":"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","file":"static/js/main.366e7f8e.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst config = {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme({\n  fonts: {\n    heading: \"Noto Sans JP\",\n    body: \"Noto Sans JP\",\n  },\n  config: config,\n});\n\nexport default theme;\n","import { Flex, Heading, VStack, Text } from \"@chakra-ui/layout\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { FaSun, FaMoon, FaBars } from \"react-icons/fa\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  Button,\n  HStack,\n  IconButton,\n  Link,\n  MenuDivider,\n  Spacer,\n} from \"@chakra-ui/react\";\nimport { useMediaQuery } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuGroup,\n  MenuItem,\n} from \"@chakra-ui/menu\";\n\nconst Navbar = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const [isSmallScreen] = useMediaQuery(\"(max-width: 800px)\");\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n  const navContent = isSmallScreen ? (\n    <React.Fragment>\n      <Spacer />\n      <Menu>\n        <MenuButton\n          as={Button}\n          bgColor=\"teal\"\n          color=\"white\"\n          _hover={{ bg: \"teal.700\" }}\n          _active={{ bg: \"teal.700\" }}\n        >\n          <FaBars />\n        </MenuButton>\n        <MenuList>\n          <MenuGroup title=\"Movies\">\n            <MenuItem>\n              <Link href=\"/get-movies\">All Movies</Link>\n            </MenuItem>\n            <MenuItem>\n              <Link href=\"/form-movies\">Add Movie</Link>\n            </MenuItem>\n          </MenuGroup>\n          <MenuDivider />\n          <MenuGroup title=\"Actors & Actresses\">\n            <MenuItem>\n              <Link href=\"/get-actors\">All Actors & Actresses</Link>\n            </MenuItem>\n            <MenuItem>\n              <Link href=\"/form-actors\">Add Actor or Actress</Link>\n            </MenuItem>\n          </MenuGroup>\n          <MenuDivider />\n          {isAuthenticated? (\n            <MenuItem  onClick={() => logout({ returnTo: window.location.origin })}>Log out</MenuItem>\n          ): (<MenuItem onClick={() => loginWithRedirect()}>Log in</MenuItem>)}\n          <MenuItem onClick={toggleColorMode}>\n            {colorMode === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </React.Fragment>\n  ) : (\n    <React.Fragment>\n      <HStack spacing=\"20px\" ml=\"10\">\n        <Menu>\n          <Link href=\"/\">\n            <MenuButton>Homepage</MenuButton>\n          </Link>\n        </Menu>\n        <Menu>\n          <MenuButton>Movies</MenuButton>\n          <MenuList>\n            <MenuGroup>\n              <MenuItem>\n                <Link href=\"/get-movies\">All Movies</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link href=\"/form-movies\">Add Movie</Link>\n              </MenuItem>\n            </MenuGroup>\n          </MenuList>\n        </Menu>\n        <Menu>\n          <MenuButton>Actors & Actresses</MenuButton>\n          <MenuList>\n            <MenuGroup>\n              <MenuItem>\n                <Link href=\"/get-actors\">All Actors & Actresses</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link href=\"/form-actors\">Add Actor or Actress</Link>\n              </MenuItem>\n            </MenuGroup>\n          </MenuList>\n        </Menu>\n      </HStack>\n      <Spacer />\n      {isAuthenticated? (\n      <Button mt={1} bgColor=\"teal.500\" color=\"white\" _hover={{ bg: \"teal.700\" }} onClick={() => logout({ returnTo: window.location.origin })}>\n        Log out\n      </Button>\n      ): (<Button bgColor=\"teal.500\" color=\"white\" _hover={{ bg: \"teal.700\" }} onClick={() => loginWithRedirect()}>\n        Log in\n      </Button>)}\n      <IconButton\n        ml={8}\n        icon={colorMode === \"light\" ? <FaMoon /> : <FaSun />}\n        isRound=\"true\"\n        onClick={toggleColorMode}\n      />\n    </React.Fragment>\n  );\n  return (\n    <VStack p={5}>\n      <Flex w=\"100%\">\n        <Heading ml=\"8\" size=\"md\">\n          FSND Casting Agency\n        </Heading>\n        {navContent}\n      </Flex>\n    </VStack>\n  );\n};\n\nexport default Navbar;\n","import {\n  Box,\n  Heading,\n  HStack,\n  Image,\n  Spacer,\n  Stack,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\n\nconst Home = () => {\n  const { colorMode } = useColorMode();\n  const [isSmallScreen] = useMediaQuery(\"(max-width: 800px)\");\n  return (\n    <Stack spacing=\"15%\" ml=\"10\" direction=\"row\" h=\"2xl\">\n      <VStack mt=\"15%\" align=\"flex-start\" spacing=\"10%\">\n        <Heading as=\"h1\" size=\"4xl\">\n          the best casting agent\n        </Heading>\n        <Text fontSize=\"2xl\">we find the perfect cast for your movie</Text>\n      </VStack>\n      <Box>\n        <Image\n          boxSize=\"500px\"\n          mt={isSmallScreen ? \"90%\" : \"40%\"}\n          objectFit=\"contain\"\n          src=\"panalight.png\"\n        ></Image>\n      </Box>\n    </Stack>\n  );\n};\n\nexport default Home;\n","import {\n  Box,\n  Text,\n  Badge,\n  SimpleGrid,\n  Heading,\n  Divider,\n} from \"@chakra-ui/layout\";\nimport { Image } from \"@chakra-ui/image\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { background, position } from \"@chakra-ui/styled-system\";\nimport React from \"react\";\nimport { Collapse } from \"@chakra-ui/transition\";\nimport { Button } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\n\nconst MoviesList = (props) => {\n  const movie = props.movie;\n  const [show, setShow] = useState(false);\n  const color = useColorModeValue(\"gray.600\", \"gray.400\");\n  const bgColor = useColorModeValue(\"gray.100\", \"gray.700\");\n  function handleToggle() {\n    setShow(!show);\n  }\n  return (\n    <Box\n      maxW=\"sm\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      key={movie.id}\n      bgColor={bgColor}\n    >\n      <div\n        className=\"background\"\n        style={{\n          backgroundImage: `url(${movie.image})`,\n          backgroundSize: \"cover\",\n          height: \"300px\",\n        }}\n      ></div>\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n            {movie.rating}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {movie.genres} | {movie.release}\n          </Box>\n        </Box>\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {movie.title}\n        </Box>\n        <Box>\n          <Box as=\"span\" color={color} fontSize=\"sm\">\n            Cast: {movie.cast}\n          </Box>\n          <Collapse startingHeight={25} in={show}>\n            {movie.plot}\n          </Collapse>\n          <Button\n            size=\"sm\"\n            colorScheme=\"teal\"\n            variant=\"link\"\n            onClick={handleToggle}\n          >\n            read {show ? \"less\" : \"more\"}\n          </Button>\n        </Box>\n        <Box position=\"relative\" d=\"flex\" mt={2}>\n          <StarIcon key={1} mt={0.5} color=\"teal.500\" />\n\n          <Box as=\"span\" ml=\"2\" color={color} fontSize=\"sm\">\n            {movie.imdb}/10\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MoviesList;\n","import { Heading } from \"@chakra-ui/react\";\n\nimport { SimpleGrid, Divider } from \"@chakra-ui/layout\";\nimport MoviesList from \"./MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst Movies = () => {\n  const { getAccessTokenSilently } = useAuth0()\n  const [movies, setMovies] = useState(null);\n \n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: 'capstone',\n          scope: 'get:movies',\n        });\n        const response = await fetch('/movies', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setMovies(await response.json());\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  if (!movies) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"moviesList\">\n      <Heading ml={10}>Movies</Heading>\n      <Divider></Divider>\n      <SimpleGrid\n        ml={10}\n        mt={5}\n        mr={10}\n        spacing={10}\n        minChildWidth=\"300px\"\n        columnGap=\"100px\"\n      >\n        {movies.map((movie) => (\n          <MoviesList movie={movie} />\n        ))}\n      </SimpleGrid>\n    </div>\n  );\n};\n\nexport default Movies;\n","import {\n  Box,\n  Text,\n  Badge,\n  SimpleGrid,\n  Heading,\n  Divider,\n} from \"@chakra-ui/layout\";\nimport { Image } from \"@chakra-ui/image\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { background, position } from \"@chakra-ui/styled-system\";\nimport React from \"react\";\nimport { Collapse } from \"@chakra-ui/transition\";\nimport { Button } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\n\nconst ActorsList = (props) => {\n  const actor = props.actor;\n  const color = useColorModeValue(\"gray.600\", \"gray.400\");\n  const bgColor = useColorModeValue(\"gray.100\", \"gray.700\");\n  let dateObj = new Date();\n  return (\n    <Box\n      maxW=\"sm\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      key={actor.id}\n      bgColor={bgColor}\n    >\n      <div\n        className=\"background\"\n        style={{\n          backgroundImage: `url(${actor.image})`,\n          backgroundSize: \"cover\",\n          height: \"300px\",\n        }}\n      ></div>\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n            {actor.type}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {actor.nationality}\n          </Box>\n        </Box>\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {actor.name}\n        </Box>\n        <Box>\n          <Box as=\"span\" color={color} fontSize=\"sm\">\n            {dateObj.getFullYear() - actor.dob} years old\n          </Box>\n          <Box>Movie: {actor.movie}</Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ActorsList;\n","import { Heading } from \"@chakra-ui/react\";\n\nimport actorsJSON from \"./actorsJSON\";\nimport { SimpleGrid, Divider } from \"@chakra-ui/layout\";\nimport ActorsList from \"./ActorsList\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Actors = () => {\n  const [actors, setActors] = useState(null);\n  const { getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: 'capstone',\n          scope: 'get:actors',\n        });\n        const response = await fetch('/actors', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setActors(await response.json());\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  if (!actors) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"actorsList\">\n      <Heading ml={10}>Actors & Actresses</Heading>\n      <Divider></Divider>\n      <SimpleGrid\n        ml={10}\n        mt={5}\n        mr={10}\n        spacing={10}\n        minChildWidth=\"200px\"\n        columnGap=\"100px\"\n      >\n        {actors.map((actor) => (\n          <ActorsList actor={actor} />\n        ))}\n      </SimpleGrid>\n    </div>\n  );\n};\n\nexport default Actors;\n","import { Box, Stack, ButtonGroup, IconButton } from \"@chakra-ui/react\";\nimport { Text } from \"@chakra-ui/layout\";\nimport { FaGithub, FaLinkedin, FaTwitter } from \"react-icons/fa\";\nconst Footer = () => {\n  return (\n    <Box\n      as=\"footer\"\n      role=\"contentinfo\"\n      mx=\"auto\"\n      maxW=\"7xl\"\n      py=\"12\"\n      px={{ base: \"4\", md: \"8\" }}\n    >\n      <Stack>\n        <Stack\n          direction=\"row\"\n          spacing=\"4\"\n          align=\"center\"\n          justify=\"space-between\"\n        >\n          <Text fontSize=\"lg\">Nourah Almutairi</Text>\n          <ButtonGroup variant=\"ghost\" color=\"gray.600\">\n            <IconButton\n              as=\"a\"\n              href=\"#\"\n              aria-label=\"LinkedIn\"\n              icon={<FaLinkedin fontSize=\"20px\" />}\n            />\n            <IconButton\n              as=\"a\"\n              href=\"#\"\n              aria-label=\"GitHub\"\n              icon={<FaGithub fontSize=\"20px\" />}\n            />\n            <IconButton\n              as=\"a\"\n              href=\"#\"\n              aria-label=\"Twitter\"\n              icon={<FaTwitter fontSize=\"20px\" />}\n            />\n          </ButtonGroup>\n        </Stack>\n        <Text fontSize=\"sm\">&copy; 2021 MiSK & Udacity. Capstone project.</Text>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import { useForm } from \"react-hook-form\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n  Textarea,\n  Stack,\n  Box,\n  Center,\n  Flex,\n  Heading,\n  HStack,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\nimport { useState, useRef } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport S3 from \"react-aws-s3\";\nconst Form = () => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [movie, setMovie] = useState({\n    title: \"\",\n    image: \"\",\n    cast: \"\",\n    plot: \"\",\n    genres: \"\",\n    rating: \"\",\n    imdb: \"\",\n    release: \"\",\n  });\n  const imageInput = useRef();\n  const { handleSubmit } = useForm();\n  const onSubmit = (e) => {\n    let image = imageInput.current.files[0];\n    let imageName = imageInput.current.files[0].name;\n    setMovie(movie);\n    const config = {\n      bucketName: process.env.REACT_APP_BUCKET_NAME,\n      region: process.env.REACT_APP_REGION,\n      accessKeyId: process.env.REACT_APP_ACCESS_ID,\n      secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\n    };\n    const ReatS3Client = new S3(config);\n    ReatS3Client.uploadFile(image, imageName).then((d) => {\n      if (d.status === 204) {\n        movie.image = d.location;\n        console.log(\"success\");\n      } else {\n        console.log(\"fail\");\n      }\n    });\n    let data = JSON.stringify({\n      title: movie.title,\n      image: movie.image,\n      cast: movie.cast,\n      plot: movie.plot,\n      genres: movie.genres,\n      rating: movie.rating,\n      imdb: movie.imdb,\n      release: movie.release,\n    });\n    console.log(data);\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: \"capstone\",\n          scope: \"post:movies\",\n        });\n        const response = await fetch(\"/movies\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: data,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  };\n  const handleChange = (e) => {\n    movie[e.target.id] = e.target.value;\n  };\n  const color = useColorModeValue(\"gray.100\", \"gray.700\");\n  const [isLargeScreen] = useMediaQuery(\"(min-width: 600px)\");\n  return isLargeScreen ? (\n    <Flex height=\"2xl\" alignItems=\"center\" justifyContent=\"center\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Stack direction=\"column\" spacing={4} p={12} rounded={6}>\n          <Box\n            bgColor={color}\n            p={8}\n            maxWidth=\"4xl\"\n            borderWidth={1}\n            borderRadius={8}\n            boxShadow=\"lg\"\n          >\n            <Heading size=\"lg\">Add movie</Heading>\n            <HStack>\n              <VStack>\n                <FormControl id=\"title\" name=\"title\" isRequired>\n                  <FormLabel>Title</FormLabel>\n                  <Input\n                    placeholder=\"Movie's title\"\n                    focusBorderColor=\"teal.500\"\n                    onChange={handleChange}\n                  />\n                </FormControl>\n                <FormControl id=\"cast\">\n                  <FormLabel>Cast</FormLabel>\n                  <Input\n                    placeholder=\"E.g.: Brad Pitt, Will Smith..\"\n                    size=\"md\"\n                    w=\"20rem\"\n                    focusBorderColor=\"teal.500\"\n                    onChange={handleChange}\n                  />\n                </FormControl>\n                <FormControl id=\"genres\">\n                  <FormLabel>Genres</FormLabel>\n                  <Input\n                    placeholder=\"E.g.:\n                  Action, Fantasy...\"\n                    size=\"md\"\n                    focusBorderColor=\"teal.500\"\n                    onChange={handleChange}\n                  />\n                </FormControl>\n                <FormControl id=\"image\">\n                  <FormLabel>Image</FormLabel>\n                  <Input\n                    type=\"file\"\n                    size=\"md\"\n                    focusBorderColor=\"teal.500\"\n                    onChange={handleChange}\n                    ref={imageInput}\n                  />\n                </FormControl>\n              </VStack>\n              <VStack>\n                <FormControl id=\"release\">\n                  <FormLabel>Release date</FormLabel>\n                  <Input\n                    placeholder=\"Year\"\n                    size=\"md\"\n                    focusBorderColor=\"teal.500\"\n                    onChange={handleChange}\n                  />\n                </FormControl>\n\n                <FormControl id=\"rating\">\n                  <FormLabel>Rating</FormLabel>\n                  <Input\n                    placeholder=\"E.g.: PG-13..\"\n                    size=\"md\"\n                    focusBorderColor=\"teal.500\"\n                    onChange={handleChange}\n                  />\n                </FormControl>\n                <FormControl id=\"imdb\">\n                  <FormLabel>IMDb Rating</FormLabel>\n                  <Input\n                    placeholder=\"E.g.: 7.8\"\n                    size=\"md\"\n                    focusBorderColor=\"teal.500\"\n                    onChange={handleChange}\n                  />\n                </FormControl>\n              </VStack>\n            </HStack>\n\n            <FormControl id=\"plot\">\n              <FormLabel>Plot</FormLabel>\n              <Textarea\n                placeholder=\"Movie's plot\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n          </Box>\n          <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n            Submit\n          </Button>\n        </Stack>\n      </form>\n    </Flex>\n  ) : (\n    <Flex height=\"xl\" alignItems=\"center\" justifyContent=\"center\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Box\n          bgColor={color}\n          p={3}\n          maxWidth=\"4xl\"\n          borderWidth={1}\n          borderRadius={8}\n          boxShadow=\"lg\"\n        >\n          <Stack direction=\"column\" spacing={2}>\n            <Heading size=\"lg\">Add movie</Heading>\n\n            <FormControl id=\"title\" isRequired>\n              <FormLabel>Title</FormLabel>\n              <Input\n                placeholder=\"Movie's title\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"cast\">\n              <FormLabel>Cast</FormLabel>\n              <Input\n                placeholder=\"E.g.: Brad Pitt, Will Smith..\"\n                size=\"md\"\n                w=\"20rem\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"genres\">\n              <FormLabel>Genres</FormLabel>\n              <Input\n                placeholder=\"E.g.:\n                  Action, Fantasy...\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <HStack>\n              <FormControl id=\"release\">\n                <FormLabel>Release date</FormLabel>\n                <Input\n                  placeholder=\"Year\"\n                  size=\"md\"\n                  focusBorderColor=\"teal.500\"\n                  onChange={handleChange}\n                />\n              </FormControl>\n\n              <FormControl id=\"rating\">\n                <FormLabel>Rating</FormLabel>\n                <Input\n                  placeholder=\"E.g.: PG-13..\"\n                  size=\"md\"\n                  focusBorderColor=\"teal.500\"\n                  onChange={handleChange}\n                />\n              </FormControl>\n            </HStack>\n            <FormControl id=\"imdb\">\n              <FormLabel>IMDb Rating</FormLabel>\n              <Input\n                placeholder=\"E.g.: 7.8\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"plot\">\n              <FormLabel>Plot</FormLabel>\n              <Textarea\n                placeholder=\"Movie's plot\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n          </Stack>\n        </Box>\n      </form>\n    </Flex>\n  );\n};\n\nexport default Form;\n","import { useForm } from \"react-hook-form\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { useState, useRef } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport S3 from \"react-aws-s3\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n  Stack,\n  Box,\n  Flex,\n  Heading,\n  Radio,\n  RadioGroup,\n} from \"@chakra-ui/react\";\n\nconst ActorForm = () => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [actor, setActor] = useState({\n    name: \"\",\n    image: \"\",\n    dob: \"\",\n    movie: \"\",\n    nationality: \"\",\n    gender: \"\",\n  });\n  const imageInput = useRef();\n  const { handleSubmit } = useForm();\n  const onSubmit = (e) => {\n    let image = imageInput.current.files[0];\n    let imageName = imageInput.current.files[0].name;\n    setActor(actor);\n    const config = {\n      bucketName: process.env.REACT_APP_BUCKET_NAME,\n      region: process.env.REACT_APP_REGION,\n      accessKeyId: process.env.REACT_APP_ACCESS_ID,\n      secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\n    };\n    const ReatS3Client = new S3(config);\n    ReatS3Client.uploadFile(image, imageName).then((d) => {\n      if (d.status === 204) {\n        actor.image = d.location;\n        console.log(\"success\");\n      } else {\n        console.log(\"fail\");\n      }\n    });\n    let data = JSON.stringify({\n      name: actor.name,\n      image: actor.image,\n      movie: actor.movie,\n      dob: actor.dob,\n      nationality: actor.nationality,\n      gender: actor.gender,\n    });\n    console.log(data);\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: \"capstone\",\n          scope: \"post:actors\",\n        });\n        const response = await fetch(\"/actors\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: data,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  };\n  const handleChange = (e) => {\n    if (e == \"m\" || e == \"f\") {\n      actor.gender = e;\n    } else {\n      actor[e.target.id] = e.target.value;\n    }\n  };\n  const color = useColorModeValue(\"gray.100\", \"gray.700\");\n  return (\n    <Flex height=\"2xl\" alignItems=\"center\" justifyContent=\"center\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Box\n          bgColor={color}\n          p={8}\n          maxWidth=\"4xl\"\n          borderWidth={1}\n          borderRadius={8}\n          boxShadow=\"lg\"\n        >\n          <Stack direction=\"column\" spacing={4} rounded={6}>\n            <Heading size=\"lg\">Add Actor & Actress</Heading>\n\n            <FormControl id=\"name\" isRequired>\n              <FormLabel>Name</FormLabel>\n              <Input\n                placeholder=\"First and Last name\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"dob\">\n              <FormLabel>Date Of Birth</FormLabel>\n              <Input\n                type=\"date\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"movie\">\n              <FormLabel>Movie</FormLabel>\n              <Input\n                placeholder=\"Movie's Title\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"nationality\">\n              <FormLabel>Nationality</FormLabel>\n              <Input\n                placeholder=\"E.g.: American..\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"gender\">\n              <FormLabel>Gender</FormLabel>\n              <RadioGroup\n                defaultValue=\"2\"\n                colorScheme=\"teal.500\"\n                onChange={handleChange}\n              >\n                <Stack spacing={5} direction=\"row\">\n                  <Radio value=\"m\">Male</Radio>\n                  <Radio value=\"f\">Female</Radio>\n                </Stack>\n              </RadioGroup>\n            </FormControl>\n            <FormControl id=\"image\">\n              <FormLabel>Image</FormLabel>\n              <Input\n                type=\"file\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                ref={imageInput}\n              />\n            </FormControl>\n          </Stack>\n          <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n            Submit\n          </Button>\n        </Box>\n      </form>\n    </Flex>\n  );\n};\n\nexport default ActorForm;\n","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Movies from \"./Movies\";\nimport Actors from \"./Actors\";\nimport Footer from \"./Footer\";\nimport Form from \"./MovieForm\";\nimport ActorForm from \"./ActorForm\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"Content\">\n          <Switch>\n            <Route path=\"/get-movies\">\n              <Movies />\n            </Route>\n            <Route path=\"/get-actors\">\n              <Actors />\n            </Route>\n            <Route path=\"/form-movies\">\n              <Form />\n            </Route>\n            <Route path=\"/form-actors\">\n              <ActorForm />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport \"@fontsource/noto-sans-jp\";\nimport theme from \"./theme\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <Auth0Provider\n    domain={process.env.REACT_APP_AUTH0_DOMAIN}\n    clientId={process.env.REACT_APP_CLIENT_ID}\n    audience={process.env.REACT_APP_AUDIENCE}\n    redirectUri={window.location.origin}\n    prompt=\"consent\"\n  >\n      <App />\n      </Auth0Provider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}