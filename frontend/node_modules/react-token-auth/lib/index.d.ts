export interface IAuthProviderConfig<T> {
    accessTokenExpireKey?: string;
    accessTokenKey?: string;
    localStorageKey?: string;
    onUpdateToken?: (token: T) => Promise<T | null>;
    onHydratation?: (token: T | null) => void;
    storage?: {
        getItem: (key: string) => any;
        setItem: (key: string, value: any) => void;
        removeItem: (key: string) => void;
    };
    customFetch?: typeof fetch;
}
export declare const createAuthProvider: <T>({ accessTokenExpireKey, accessTokenKey, localStorageKey, onUpdateToken, onHydratation, storage, customFetch, }: IAuthProviderConfig<T>) => [() => [boolean], (input: RequestInfo, init?: RequestInit | undefined) => Promise<Response>, (newTokens: T) => void, () => void];
