[{"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/index.js":"1","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/App.js":"2","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Navbar.js":"3","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/theme.js":"4","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Home.js":"5","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Movies.js":"6","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/MoviesList.js":"7","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/moviesJSON.js":"8","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Actors.js":"9","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/actorsJSON.js":"10","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/ActorsList.js":"11","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Footer.js":"12","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/MovieForm.js":"13","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/ActorForm.js":"14"},{"size":979,"mtime":1630091693377,"results":"15","hashOfConfig":"16"},{"size":961,"mtime":1630090630192,"results":"17","hashOfConfig":"16"},{"size":3847,"mtime":1630329123202,"results":"18","hashOfConfig":"16"},{"size":272,"mtime":1628721143786,"results":"19","hashOfConfig":"16"},{"size":884,"mtime":1629515137265,"results":"20","hashOfConfig":"16"},{"size":1274,"mtime":1630328738012,"results":"21","hashOfConfig":"16"},{"size":2456,"mtime":1630356030070,"results":"22","hashOfConfig":"16"},{"size":13698,"mtime":1628781743064,"results":"23","hashOfConfig":"16"},{"size":1327,"mtime":1630328738012,"results":"24","hashOfConfig":"16"},{"size":2354,"mtime":1629080701727,"results":"25","hashOfConfig":"16"},{"size":1908,"mtime":1629441610185,"results":"26","hashOfConfig":"16"},{"size":1298,"mtime":1629179630552,"results":"27","hashOfConfig":"16"},{"size":8484,"mtime":1630444036397,"results":"28","hashOfConfig":"16"},{"size":4708,"mtime":1630444384109,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"8yzj1e",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/index.js",[],["65","66"],"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/App.js",[],"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Navbar.js",["67"],"import { Flex, Heading, VStack, Text } from \"@chakra-ui/layout\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { FaSun, FaMoon, FaBars } from \"react-icons/fa\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  Button,\n  HStack,\n  IconButton,\n  Link,\n  MenuDivider,\n  Spacer,\n} from \"@chakra-ui/react\";\nimport { useMediaQuery } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuGroup,\n  MenuItem,\n} from \"@chakra-ui/menu\";\n\nconst Navbar = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const [isSmallScreen] = useMediaQuery(\"(max-width: 800px)\");\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n  const navContent = isSmallScreen ? (\n    <React.Fragment>\n      <Spacer />\n      <Menu>\n        <MenuButton\n          as={Button}\n          bgColor=\"teal\"\n          color=\"white\"\n          _hover={{ bg: \"teal.700\" }}\n          _active={{ bg: \"teal.700\" }}\n        >\n          <FaBars />\n        </MenuButton>\n        <MenuList>\n          <MenuGroup title=\"Movies\">\n            <MenuItem>\n              <Link href=\"/get-movies\">All Movies</Link>\n            </MenuItem>\n            <MenuItem>\n              <Link href=\"/form-movies\">Add Movie</Link>\n            </MenuItem>\n          </MenuGroup>\n          <MenuDivider />\n          <MenuGroup title=\"Actors & Actresses\">\n            <MenuItem>\n              <Link href=\"/get-actors\">All Actors & Actresses</Link>\n            </MenuItem>\n            <MenuItem>\n              <Link href=\"/form-actors\">Add Actor or Actress</Link>\n            </MenuItem>\n          </MenuGroup>\n          <MenuDivider />\n          {isAuthenticated? (\n            <MenuItem  onClick={() => logout({ returnTo: window.location.origin })}>Log out</MenuItem>\n          ): (<MenuItem onClick={() => loginWithRedirect()}>Log in</MenuItem>)}\n          <MenuItem onClick={toggleColorMode}>\n            {colorMode === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </React.Fragment>\n  ) : (\n    <React.Fragment>\n      <HStack spacing=\"20px\" ml=\"10\">\n        <Menu>\n          <Link href=\"/\">\n            <MenuButton>Homepage</MenuButton>\n          </Link>\n        </Menu>\n        <Menu>\n          <MenuButton>Movies</MenuButton>\n          <MenuList>\n            <MenuGroup>\n              <MenuItem>\n                <Link href=\"/get-movies\">All Movies</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link href=\"/form-movies\">Add Movie</Link>\n              </MenuItem>\n            </MenuGroup>\n          </MenuList>\n        </Menu>\n        <Menu>\n          <MenuButton>Actors & Actresses</MenuButton>\n          <MenuList>\n            <MenuGroup>\n              <MenuItem>\n                <Link href=\"/get-actors\">All Actors & Actresses</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link href=\"/form-actors\">Add Actor or Actress</Link>\n              </MenuItem>\n            </MenuGroup>\n          </MenuList>\n        </Menu>\n      </HStack>\n      <Spacer />\n      {isAuthenticated? (\n      <Button mt={1} bgColor=\"teal.500\" color=\"white\" _hover={{ bg: \"teal.700\" }} onClick={() => logout({ returnTo: window.location.origin })}>\n        Log out\n      </Button>\n      ): (<Button bgColor=\"teal.500\" color=\"white\" _hover={{ bg: \"teal.700\" }} onClick={() => loginWithRedirect()}>\n        Log in\n      </Button>)}\n      <IconButton\n        ml={8}\n        icon={colorMode === \"light\" ? <FaMoon /> : <FaSun />}\n        isRound=\"true\"\n        onClick={toggleColorMode}\n      />\n    </React.Fragment>\n  );\n  return (\n    <VStack p={5}>\n      <Flex w=\"100%\">\n        <Heading ml=\"8\" size=\"md\">\n          FSND Casting Agency\n        </Heading>\n        {navContent}\n      </Flex>\n    </VStack>\n  );\n};\n\nexport default Navbar;\n","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/theme.js",[],"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Home.js",["68","69","70"],"import {\n  Box,\n  Heading,\n  HStack,\n  Image,\n  Spacer,\n  Stack,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\n\nconst Home = () => {\n  const { colorMode } = useColorMode();\n  const [isSmallScreen] = useMediaQuery(\"(max-width: 800px)\");\n  return (\n    <Stack spacing=\"15%\" ml=\"10\" direction=\"row\" h=\"2xl\">\n      <VStack mt=\"15%\" align=\"flex-start\" spacing=\"10%\">\n        <Heading as=\"h1\" size=\"4xl\">\n          the best casting agent\n        </Heading>\n        <Text fontSize=\"2xl\">we find the perfect cast for your movie</Text>\n      </VStack>\n      <Box>\n        <Image\n          boxSize=\"500px\"\n          mt={isSmallScreen ? \"90%\" : \"40%\"}\n          objectFit=\"contain\"\n          src=\"panalight.png\"\n        ></Image>\n      </Box>\n    </Stack>\n  );\n};\n\nexport default Home;\n","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Movies.js",[],"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/MoviesList.js",["71","72","73","74","75","76","77"],"import {\n  Box,\n  Text,\n  Badge,\n  SimpleGrid,\n  Heading,\n  Divider,\n} from \"@chakra-ui/layout\";\nimport { Image } from \"@chakra-ui/image\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { background, position } from \"@chakra-ui/styled-system\";\nimport React from \"react\";\nimport { Collapse } from \"@chakra-ui/transition\";\nimport { Button } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\n\nconst MoviesList = (props) => {\n  const movie = props.movie;\n  const [show, setShow] = useState(false);\n  const color = useColorModeValue(\"gray.600\", \"gray.400\");\n  const bgColor = useColorModeValue(\"gray.100\", \"gray.700\");\n  function handleToggle() {\n    setShow(!show);\n  }\n  return (\n    <Box\n      maxW=\"sm\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      key={movie.id}\n      bgColor={bgColor}\n    >\n      <div\n        className=\"background\"\n        style={{\n          backgroundImage: `url(${movie.image})`,\n          backgroundSize: \"cover\",\n          height: \"300px\",\n        }}\n      ></div>\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n            {movie.rating}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {movie.genres} | {movie.release}\n          </Box>\n        </Box>\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {movie.title}\n        </Box>\n        <Box>\n          <Box as=\"span\" color={color} fontSize=\"sm\">\n            Cast: {movie.cast}\n          </Box>\n          <Collapse startingHeight={25} in={show}>\n            {movie.plot}\n          </Collapse>\n          <Button\n            size=\"sm\"\n            colorScheme=\"teal\"\n            variant=\"link\"\n            onClick={handleToggle}\n          >\n            read {show ? \"less\" : \"more\"}\n          </Button>\n        </Box>\n        <Box position=\"relative\" d=\"flex\" mt={2}>\n          <StarIcon key={1} mt={0.5} color=\"teal.500\" />\n\n          <Box as=\"span\" ml=\"2\" color={color} fontSize=\"sm\">\n            {movie.imdb}/10\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MoviesList;\n","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/moviesJSON.js",[],["78","79"],"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Actors.js",["80"],"import { Heading } from \"@chakra-ui/react\";\n\nimport actorsJSON from \"./actorsJSON\";\nimport { SimpleGrid, Divider } from \"@chakra-ui/layout\";\nimport ActorsList from \"./ActorsList\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Actors = () => {\n  const [actors, setActors] = useState(null);\n  const { getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: 'capstone',\n          scope: 'get:actors',\n        });\n        const response = await fetch('/actors', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setActors(await response.json());\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  if (!actors) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"actorsList\">\n      <Heading ml={10}>Actors & Actresses</Heading>\n      <Divider></Divider>\n      <SimpleGrid\n        ml={10}\n        mt={5}\n        mr={10}\n        spacing={10}\n        minChildWidth=\"200px\"\n        columnGap=\"100px\"\n      >\n        {actors.map((actor) => (\n          <ActorsList actor={actor} />\n        ))}\n      </SimpleGrid>\n    </div>\n  );\n};\n\nexport default Actors;\n","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/actorsJSON.js",[],"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/ActorsList.js",["81","82","83","84","85","86","87","88","89","90","91"],"import {\n  Box,\n  Text,\n  Badge,\n  SimpleGrid,\n  Heading,\n  Divider,\n} from \"@chakra-ui/layout\";\nimport { Image } from \"@chakra-ui/image\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { background, position } from \"@chakra-ui/styled-system\";\nimport React from \"react\";\nimport { Collapse } from \"@chakra-ui/transition\";\nimport { Button } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\n\nconst ActorsList = (props) => {\n  const actor = props.actor;\n  const color = useColorModeValue(\"gray.600\", \"gray.400\");\n  const bgColor = useColorModeValue(\"gray.100\", \"gray.700\");\n  let dateObj = new Date();\n  return (\n    <Box\n      maxW=\"sm\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      key={actor.id}\n      bgColor={bgColor}\n    >\n      <div\n        className=\"background\"\n        style={{\n          backgroundImage: `url(${actor.image})`,\n          backgroundSize: \"cover\",\n          height: \"300px\",\n        }}\n      ></div>\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n            {actor.type}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {actor.nationality}\n          </Box>\n        </Box>\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {actor.name}\n        </Box>\n        <Box>\n          <Box as=\"span\" color={color} fontSize=\"sm\">\n            {dateObj.getFullYear() - actor.dob} years old\n          </Box>\n          <Box>Movie: {actor.movie}</Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ActorsList;\n","/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Footer.js",[],"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/MovieForm.js",["92","93","94"],"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/ActorForm.js",["95","96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":33,"nodeType":"105","messageId":"106","endLine":1,"endColumn":37},{"ruleId":"103","severity":1,"message":"107","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":4,"endColumn":9},{"ruleId":"103","severity":1,"message":"108","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":9},{"ruleId":"103","severity":1,"message":"109","line":15,"column":11,"nodeType":"105","messageId":"106","endLine":15,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":3,"column":3,"nodeType":"105","messageId":"106","endLine":3,"endColumn":7},{"ruleId":"103","severity":1,"message":"110","line":5,"column":3,"nodeType":"105","messageId":"106","endLine":5,"endColumn":13},{"ruleId":"103","severity":1,"message":"111","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":10},{"ruleId":"103","severity":1,"message":"112","line":7,"column":3,"nodeType":"105","messageId":"106","endLine":7,"endColumn":10},{"ruleId":"103","severity":1,"message":"113","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":15},{"ruleId":"103","severity":1,"message":"114","line":11,"column":10,"nodeType":"105","messageId":"106","endLine":11,"endColumn":20},{"ruleId":"103","severity":1,"message":"115","line":11,"column":22,"nodeType":"105","messageId":"106","endLine":11,"endColumn":30},{"ruleId":"99","replacedBy":"116"},{"ruleId":"101","replacedBy":"117"},{"ruleId":"103","severity":1,"message":"118","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":3,"column":3,"nodeType":"105","messageId":"106","endLine":3,"endColumn":7},{"ruleId":"103","severity":1,"message":"110","line":5,"column":3,"nodeType":"105","messageId":"106","endLine":5,"endColumn":13},{"ruleId":"103","severity":1,"message":"111","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":10},{"ruleId":"103","severity":1,"message":"112","line":7,"column":3,"nodeType":"105","messageId":"106","endLine":7,"endColumn":10},{"ruleId":"103","severity":1,"message":"113","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":15},{"ruleId":"103","severity":1,"message":"119","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":18},{"ruleId":"103","severity":1,"message":"114","line":11,"column":10,"nodeType":"105","messageId":"106","endLine":11,"endColumn":20},{"ruleId":"103","severity":1,"message":"115","line":11,"column":22,"nodeType":"105","messageId":"106","endLine":11,"endColumn":30},{"ruleId":"103","severity":1,"message":"120","line":13,"column":10,"nodeType":"105","messageId":"106","endLine":13,"endColumn":18},{"ruleId":"103","severity":1,"message":"121","line":14,"column":10,"nodeType":"105","messageId":"106","endLine":14,"endColumn":16},{"ruleId":"103","severity":1,"message":"122","line":15,"column":10,"nodeType":"105","messageId":"106","endLine":15,"endColumn":18},{"ruleId":"103","severity":1,"message":"123","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"103","severity":1,"message":"124","line":12,"column":3,"nodeType":"105","messageId":"106","endLine":12,"endColumn":9},{"ruleId":"103","severity":1,"message":"125","line":72,"column":15,"nodeType":"105","messageId":"106","endLine":72,"endColumn":23},{"ruleId":"103","severity":1,"message":"123","line":7,"column":3,"nodeType":"105","messageId":"106","endLine":7,"endColumn":19},{"ruleId":"103","severity":1,"message":"125","line":66,"column":15,"nodeType":"105","messageId":"106","endLine":66,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":79,"column":11,"nodeType":"128","messageId":"129","endLine":79,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":79,"column":23,"nodeType":"128","messageId":"129","endLine":79,"endColumn":25},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Text' is defined but never used.","Identifier","unusedVar","'HStack' is defined but never used.","'Spacer' is defined but never used.","'colorMode' is assigned a value but never used.","'SimpleGrid' is defined but never used.","'Heading' is defined but never used.","'Divider' is defined but never used.","'Image' is defined but never used.","'background' is defined but never used.","'position' is defined but never used.",["130"],["131"],"'actorsJSON' is defined but never used.","'StarIcon' is defined but never used.","'Collapse' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'FormErrorMessage' is defined but never used.","'Center' is defined but never used.","'response' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]