{"ast":null,"code":"var _jsxFileName = \"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Actors.js\",\n    _s = $RefreshSig$();\n\nimport { Heading } from \"@chakra-ui/react\";\nimport actorsJSON from \"./actorsJSON\";\nimport { SimpleGrid, Divider } from \"@chakra-ui/layout\";\nimport ActorsList from \"./ActorsList\";\nimport { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Actors = () => {\n  _s();\n\n  const [actors, setActors] = useState(null);\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: 'capstone',\n          scope: 'get:movies'\n        });\n        const response = await fetch('/api/movies', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMovies(await response.json());\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  if (!movies) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actorsList\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      ml: 10,\n      children: \"Actors & Actresses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      ml: 10,\n      mt: 5,\n      mr: 10,\n      spacing: 10,\n      minChildWidth: \"200px\",\n      columnGap: \"100px\",\n      children: actors.map(actor => /*#__PURE__*/_jsxDEV(ActorsList, {\n        actor: actor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Actors, \"vrPCghh/aTmJl/zZUmjT380o8UE=\");\n\n_c = Actors;\nexport default Actors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actors\");","map":{"version":3,"sources":["/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/Actors.js"],"names":["Heading","actorsJSON","SimpleGrid","Divider","ActorsList","useState","useAuth0","Actors","actors","setActors","useEffect","token","getAccessTokenSilently","audience","scope","response","fetch","headers","Authorization","setMovies","json","e","console","error","movies","map","actor"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAI;AACF,cAAMC,KAAK,GAAG,MAAMC,sBAAsB,CAAC;AACzCC,UAAAA,QAAQ,EAAE,UAD+B;AAEzCC,UAAAA,KAAK,EAAE;AAFkC,SAAD,CAA1C;AAIA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAG,UAASP,KAAM;AADxB;AADiC,SAAhB,CAA5B;AAKAQ,QAAAA,SAAS,CAAC,MAAMJ,QAAQ,CAACK,IAAT,EAAP,CAAT;AACD,OAXD,CAWE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KAfD;AAgBD,GAjBQ,EAiBN,CAACT,sBAAD,CAjBM,CAAT;;AAmBA,MAAI,CAACY,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,OAAO,EAAE,EAJX;AAKE,MAAA,aAAa,EAAC,OALhB;AAME,MAAA,SAAS,EAAC,OANZ;AAAA,gBAQGhB,MAAM,CAACiB,GAAP,CAAYC,KAAD,iBACV,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,cADD;AARH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA5CD;;GAAMnB,M;;KAAAA,M;AA8CN,eAAeA,MAAf","sourcesContent":["import { Heading } from \"@chakra-ui/react\";\n\nimport actorsJSON from \"./actorsJSON\";\nimport { SimpleGrid, Divider } from \"@chakra-ui/layout\";\nimport ActorsList from \"./ActorsList\";\nimport { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Actors = () => {\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: 'capstone',\n          scope: 'get:movies',\n        });\n        const response = await fetch('/api/movies', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setMovies(await response.json());\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  if (!movies) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"actorsList\">\n      <Heading ml={10}>Actors & Actresses</Heading>\n      <Divider></Divider>\n      <SimpleGrid\n        ml={10}\n        mt={5}\n        mr={10}\n        spacing={10}\n        minChildWidth=\"200px\"\n        columnGap=\"100px\"\n      >\n        {actors.map((actor) => (\n          <ActorsList actor={actor} />\n        ))}\n      </SimpleGrid>\n    </div>\n  );\n};\n\nexport default Actors;\n"]},"metadata":{},"sourceType":"module"}