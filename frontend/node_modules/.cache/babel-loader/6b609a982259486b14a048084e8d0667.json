{"ast":null,"code":"var _jsxFileName = \"/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/ActorForm.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { useState, useRef } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport S3 from \"react-aws-s3\";\nimport { FormErrorMessage, FormLabel, FormControl, Input, Button, Stack, Box, Flex, Heading, Radio, RadioGroup } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActorForm = () => {\n  _s();\n\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  const [actor, setActor] = useState({\n    name: \"\",\n    image: \"\",\n    dob: \"\",\n    movie: \"\",\n    nationality: \"\",\n    gender: \"\"\n  });\n  const imageInput = useRef();\n  const {\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = e => {\n    let image = imageInput.current.files[0];\n    let imageName = imageInput.current.files[0].name;\n    setActor(actor);\n    const config = {\n      bucketName: process.env.REACT_APP_BUCKET_NAME,\n      region: process.env.REACT_APP_REGION,\n      accessKeyId: process.env.REACT_APP_ACCESS_ID,\n      secretAccessKey: process.env.REACT_APP_ACCESS_KEY\n    };\n    const ReatS3Client = new S3(config);\n    ReatS3Client.uploadFile(image, imageName).then(d => {\n      if (d.status === 204) {\n        actor.image = d.location;\n        console.log(\"success\");\n      } else {\n        console.log(\"fail\");\n      }\n    });\n    let data = JSON.stringify({\n      name: actor.name,\n      image: actor.image,\n      movie: actor.movie,\n      dob: actor.dob,\n      nationality: actor.nationality,\n      gender: actor.gender\n    });\n    console.log(data);\n\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: \"capstone\",\n          scope: \"post:actors\"\n        });\n        const response = await fetch(\"/actors\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: data\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  };\n\n  const handleChange = e => {\n    if (e == \"m\" || e == \"f\") {\n      actor.gender = e;\n    } else {\n      actor[e.target.id] = e.target.value;\n    }\n  };\n\n  const color = useColorModeValue(\"gray.100\", \"gray.700\");\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"2xl\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bgColor: color,\n        p: 8,\n        maxWidth: \"4xl\",\n        borderWidth: 1,\n        borderRadius: 8,\n        boxShadow: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"column\",\n          spacing: 4,\n          rounded: 6,\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            size: \"lg\",\n            children: \"Add Actor & Actress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"name\",\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"First and Last name\",\n              focusBorderColor: \"teal.500\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"dob\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Date Of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              size: \"md\",\n              focusBorderColor: \"teal.500\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"movie\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Movie's Title\",\n              size: \"md\",\n              focusBorderColor: \"teal.500\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"nationality\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Nationality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"E.g.: American..\",\n              size: \"md\",\n              focusBorderColor: \"teal.500\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"gender\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              defaultValue: \"2\",\n              colorScheme: \"teal.500\",\n              onChange: handleChange,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 5,\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"m\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"f\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"file\",\n              size: \"md\",\n              focusBorderColor: \"teal.500\",\n              ref: imageInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          colorScheme: \"teal\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActorForm, \"MfZp6j81chwvmxJZr6a12tU9HpA=\", false, function () {\n  return [useAuth0, useForm, useColorModeValue];\n});\n\n_c = ActorForm;\nexport default ActorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActorForm\");","map":{"version":3,"sources":["/Users/noraabdullah/Desktop/FSND/capstone/frontend/src/ActorForm.js"],"names":["useForm","useColorModeValue","useState","useRef","useAuth0","S3","FormErrorMessage","FormLabel","FormControl","Input","Button","Stack","Box","Flex","Heading","Radio","RadioGroup","ActorForm","getAccessTokenSilently","actor","setActor","name","image","dob","movie","nationality","gender","imageInput","handleSubmit","onSubmit","e","current","files","imageName","config","bucketName","process","env","REACT_APP_BUCKET_NAME","region","REACT_APP_REGION","accessKeyId","REACT_APP_ACCESS_ID","secretAccessKey","REACT_APP_ACCESS_KEY","ReatS3Client","uploadFile","then","d","status","location","console","log","data","JSON","stringify","token","audience","scope","response","fetch","method","headers","Authorization","body","error","handleChange","target","id","value","color"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { useState, useRef } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport S3 from \"react-aws-s3\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n  Stack,\n  Box,\n  Flex,\n  Heading,\n  Radio,\n  RadioGroup,\n} from \"@chakra-ui/react\";\n\nconst ActorForm = () => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [actor, setActor] = useState({\n    name: \"\",\n    image: \"\",\n    dob: \"\",\n    movie: \"\",\n    nationality: \"\",\n    gender: \"\",\n  });\n  const imageInput = useRef();\n  const { handleSubmit } = useForm();\n  const onSubmit = (e) => {\n    let image = imageInput.current.files[0];\n    let imageName = imageInput.current.files[0].name;\n    setActor(actor);\n    const config = {\n      bucketName: process.env.REACT_APP_BUCKET_NAME,\n      region: process.env.REACT_APP_REGION,\n      accessKeyId: process.env.REACT_APP_ACCESS_ID,\n      secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\n    };\n    const ReatS3Client = new S3(config);\n    ReatS3Client.uploadFile(image, imageName).then((d) => {\n      if (d.status === 204) {\n        actor.image = d.location;\n        console.log(\"success\");\n      } else {\n        console.log(\"fail\");\n      }\n    });\n    let data = JSON.stringify({\n      name: actor.name,\n      image: actor.image,\n      movie: actor.movie,\n      dob: actor.dob,\n      nationality: actor.nationality,\n      gender: actor.gender,\n    });\n    console.log(data);\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: \"capstone\",\n          scope: \"post:actors\",\n        });\n        const response = await fetch(\"/actors\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: data,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  };\n  const handleChange = (e) => {\n    if (e == \"m\" || e == \"f\") {\n      actor.gender = e;\n    } else {\n      actor[e.target.id] = e.target.value;\n    }\n  };\n  const color = useColorModeValue(\"gray.100\", \"gray.700\");\n  return (\n    <Flex height=\"2xl\" alignItems=\"center\" justifyContent=\"center\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Box\n          bgColor={color}\n          p={8}\n          maxWidth=\"4xl\"\n          borderWidth={1}\n          borderRadius={8}\n          boxShadow=\"lg\"\n        >\n          <Stack direction=\"column\" spacing={4} rounded={6}>\n            <Heading size=\"lg\">Add Actor & Actress</Heading>\n\n            <FormControl id=\"name\" isRequired>\n              <FormLabel>Name</FormLabel>\n              <Input\n                placeholder=\"First and Last name\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"dob\">\n              <FormLabel>Date Of Birth</FormLabel>\n              <Input\n                type=\"date\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"movie\">\n              <FormLabel>Movie</FormLabel>\n              <Input\n                placeholder=\"Movie's Title\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"nationality\">\n              <FormLabel>Nationality</FormLabel>\n              <Input\n                placeholder=\"E.g.: American..\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                onChange={handleChange}\n              />\n            </FormControl>\n            <FormControl id=\"gender\">\n              <FormLabel>Gender</FormLabel>\n              <RadioGroup\n                defaultValue=\"2\"\n                colorScheme=\"teal.500\"\n                onChange={handleChange}\n              >\n                <Stack spacing={5} direction=\"row\">\n                  <Radio value=\"m\">Male</Radio>\n                  <Radio value=\"f\">Female</Radio>\n                </Stack>\n              </RadioGroup>\n            </FormControl>\n            <FormControl id=\"image\">\n              <FormLabel>Image</FormLabel>\n              <Input\n                type=\"file\"\n                size=\"md\"\n                focusBorderColor=\"teal.500\"\n                ref={imageInput}\n              />\n            </FormControl>\n          </Stack>\n          <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n            Submit\n          </Button>\n        </Box>\n      </form>\n    </Flex>\n  );\n};\n\nexport default ActorForm;\n"]},"metadata":{},"sourceType":"module"}